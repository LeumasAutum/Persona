Vulnerability Title,Severity,Description,Solution
"Server Leaks Information via ""X-Powered-By"" HTTP Response Header Field(s)",Low,<p>The web/application server is leaking information via one or more,<p>The web/application server is leaking information via one or more
Apache .htaccess,Medium,<p>The Apache server does not properly restrict access to .htaccess and/or .htpasswd files.</p>,<p>Change the Apache configuration to block access to these files.</p>
Webconfig file exposure,Low,<p>An information disclosure vulnerability exists in the remote web server due to the disclosure of the web.config file.</p>,<p>Change the Apache configuration to block access to these files.</p>
X-Content-Type-Options Header Missing,High,<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to,"<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to"
Missing Anti-clickjacking Header,Medium,<p>The response does not include either Content-Security-Policy with,<p>Ensure the Content-Security-Policy and X-Frame-Options HTTP headers are set up. Alternatively consider implementing Content Security Policy
Hidden File Found,Medium,"<p>A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.</p>","<p>Disable the file exposure. If it needs to be exposed then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.</p>"
Content Security Policy (CSP) Header Not Set,High,<p>All of these providers provide metadata via an internal unroutable IP address,<p>Modify the HTTP headers of the web server to not disclose detailed information about the underlying web server.</p>
TLS 1.0 and TLS 1.1 Is Enabled,Medium,<p>TLS/SSL Server is enabling the BEAST attack</p>,"<p>Disable SSLv2, SSLv3, and TLS 1.0. The best solution is to only have TLS 1.2 enabled</p>"
HTTP Header Information Disclosure,Low,"<p>The HTTP headers sent by the remote web server disclose information that can aid an attacker, such as the server version and technologies used by the web server.</p>",<p>Modify the HTTP headers of the web server to not disclose detailed information about the underlying web server.</p>
Laravel Debug Mode is enabled,Medium,<p>Laravel application debug mode is enabled</p>,"<p>Disable application debug mode in prod, or have it enabled in localhost for development purposes</p>"
Incorrect user management,Low,"<p>During the password reset process, It is possible to learn the accounts that are registered on the application.[1] By inspecting the responses returned by the API we can noticed that there are different messages depending if user is registered on the application.<br />
The API returns 200 when a valid user sent the password request and 401 if invalid</p>",<p>Implement a custom message and unique error message in case user is or isn</p>
